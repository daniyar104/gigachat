const mongoose = require("mongoose");
const app = require("./app");
const { Server } = require("socket.io");
const http = require("http");

const PORT = process.env.PORT || 5000;
const MONGO_URI = "mongodb+srv://temirovdaniar104_db_user:10AJpdozcmSwtqtO@cluster0.m8oz2ur.mongodb.net/?retryWrites=true&w=majority&appName=Cluster0"; // —Ç–≤–æ—è Mongo —Å—Ç—Ä–æ–∫–∞

// –°–æ–∑–¥–∞—ë–º HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ Express
const server = http.createServer(app);

// –ü–æ–¥–∫–ª—é—á–∞–µ–º Socket.IO
const io = new Server(server, {
  cors: {
    origin: "*", // –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–æ–º–µ–Ω —Ñ—Ä–æ–Ω—Ç–∞
    methods: ["GET", "POST"]
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π —á–µ—Ä–µ–∑ Socket.IO
io.on("connection", (socket) => {
  console.log("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è:", socket.id);

  // –ü—Ä–∏–º–µ—Ä —Å–æ–±—ã—Ç–∏—è: –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  socket.on("send_message", (data) => {
    console.log("–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ:", data);

    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—Å–µ–º –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º
    io.emit("receive_message", data);
  });

  // –ö–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è
  socket.on("disconnect", () => {
    console.log("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª—é—á–∏–ª—Å—è:", socket.id);
  });
});

// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ MongoDB –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
mongoose.connect(MONGO_URI)
  .then(() => {
    server.listen(PORT, () => console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`));
  })
  .catch(err => console.error("‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:", err));
